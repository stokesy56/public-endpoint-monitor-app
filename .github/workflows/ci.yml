name: CI
on:
  push:
    branches: [ main ]
  pull_request:

env:
  REGION: europe-west2
  PROJECT: ${{ secrets.GCP_PROJECT }}
  REPO: public-endpoint-monitor                  # Artifact Registry repo
  REGISTRY: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}
  IMAGE: public-endpoint-monitor
  CHART_NAME: public-endpoint-monitor
  CHART_VERSION: 0.1.${{ github.run_number }}

jobs:
  test-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install poetry==1.8.2
      - run: poetry install
      - run: poetry run pytest -q
      - run: poetry run pre-commit run --all-files

  build-and-push:
    needs: test-lint
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_PROVIDER }}
          service_account: ci-build@${{ env.PROJECT }}.iam.gserviceaccount.com

      - name: Configure docker â†’ Artifact Registry
        run: gcloud auth configure-docker $REGISTRY --quiet

      - name: Build and push image
        run: |
          docker build -t $REGISTRY/$IMAGE:${{ github.sha }} .
          docker push $REGISTRY/$IMAGE:${{ github.sha }}

      - name: Helm lint & package
        run: |
          helm lint charts/$CHART_NAME
          helm package charts/$CHART_NAME \
            --version $CHART_VERSION \
            --destination dist

      - name: Push chart as OCI
        run: |
          helm push dist/$CHART_NAME-$CHART_VERSION.tgz oci://$REGISTRY/helm
