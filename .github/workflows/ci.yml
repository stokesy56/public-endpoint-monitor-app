name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  REGION: europe-west2
  PROJECT: ${{ secrets.GCP_PROJECT }}
  CHART_VERSION: 0.1.${{ github.run_number }}

jobs:
  test-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install poetry==1.8.2
      - run: poetry install
      - run: poetry run pytest -q
      - run: poetry run pre-commit run --all-files

  build-and-push:
    needs: test-lint
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4

      # ── Auth to Google Cloud via OIDC ──────────────────────────────────────
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_PROVIDER }}
          service_account: ci-build@${{ env.PROJECT }}.iam.gserviceaccount.com

      # ── Derive registry host + full path ───────────────────────────────────
      - name: Set registry env vars
        run: |
          echo "REGISTRY_HOST=${{ env.REGION }}-docker.pkg.dev" >> $GITHUB_ENV
          echo "REGISTRY=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.PROJECT }}-registry" >> $GITHUB_ENV

      # ── Configure Docker creds for Artifact Registry host only -------------
      - name: Configure Docker
        run: gcloud auth configure-docker $REGISTRY_HOST --quiet

      # ── Build & push container image --------------------------------------
      - name: Build & push image
        run: |
          docker build -t $REGISTRY/$PROJECT:${{ github.sha }} .
          docker push $REGISTRY/$PROJECT:${{ github.sha }}

      # ── Helm lint & package chart -----------------------------------------
      - name: Helm lint & package
        run: |
          helm lint charts/$PROJECT
          helm package charts/$PROJECT \
            --version $CHART_VERSION \
            --destination dist

      # ── Login & push chart as OCI (host only) ------------------------------
      - name: Push Helm chart
        run: |
          helm registry login $REGISTRY_HOST \
            -u oauth2accesstoken \
            -p "$(gcloud auth print-access-token)"
          helm push dist/$PROJECT-$CHART_VERSION.tgz oci://$REGISTRY/helm
